{"version":3,"sources":["historyUtils.tsx","Menu.tsx","Header.tsx","ProfileCard.tsx","QuestionForm.tsx","Register.tsx","ProfileContent.tsx","ProfilePop.tsx","StudentHome.tsx","QuestionCard.tsx","TutorHome.tsx","Home.tsx","Login.tsx","CancelPop.tsx","StudentHistory.tsx","TutorHistory.tsx","History.tsx","Profile.tsx","SearchQuestion.tsx","SearchTutor.tsx","Search.tsx","App.tsx","utils/reportWebVitals.ts","index.tsx"],"names":["createBrowserHistory","Login","window","location","href","Switches","props","Switch","checked","isDark","onChange","name","inputProps","id","Menu","useState","toShow","setShow","useEffect","addEventListener","e","currentTarget","scrollY","handleNavigation","isLogin","token","classes","makeStyles","theme","root","border","flexGrow","menuButton","marginRight","spacing","title","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","useStyles","history","useHistory","primaryColor","secondaryColor","createMuiTheme","primary","main","secondary","searchWords","setSearch","ThemeProvider","className","AppBar","elevation","Container","maxWidth","Toolbar","Box","Button","onClick","push","style","fontFamily","onSubmit","pathname","state","q","preventDefault","InputBase","placeholder","input","value","target","Typography","variant","switchRole","mx","IconButton","edge","aria-label","logout","Header","boxShadow","header","fontSize","marginTop","Card","background","CardContent","component","text","ProfileCard","chips","profile","tags","forEach","Chip","label","size","length","shift","createStyles","avatars","button","Grid","container","direction","justify","item","xs","handleProfile","user_id","Avatar","alt","first_name","last_name","src","picture","gutterBottom","school","degree","major","introduction","CardActions","handleAsk","QUESTION","QuestionForm","card","headerSize","form","margin","currTag","setTag","setTags","sendEmail","checkEmail","currTitle","setTitle","currDetail","setDetail","currPath","setPath","currFile","setFile","filetype","setfiletype","currStartTime","setStartTime","currEndTime","setEndTime","_handleTextFieldChange","setFunc","handleSubmit","ask","nowTime","Date","now","email","alert","startTime","parse","endTime","file_link","filename","String","getTime","split","replace","upload_headers","id_token","fetch","UPLOAD","method","headers","body","catch","err","tutor_id","send_email","detail","attachment","start_time","end_time","tutor_name","put_headers","access_token","JSON","stringify","then","resp","json","close","post_headers","question_id","created_at","user_name","status","reload","console","log","tag","onDelete","filter","handelDeleteTag","FormGroup","TextField","defaultValue","InputProps","readOnly","FormControlLabel","control","Checkbox","required","fullWidth","multiline","rows","type","accept","files","_handleFileInput","includes","newtags","concat","noValidate","InputLabelProps","shrink","Transition","React","forwardRef","ref","Slide","Register","dialogCustomizedWidth","iconRef","useRef","firstName","setfirstName","lastName","setlastName","gender","setGender","setSchool","setDegree","setMajor","tutor","setTutor","availability","setAvailability","intro","setIntro","fromTime","setFromTime","toTime","setToTime","weekDay","setDay","currIcon","setIcon","_handleOptionChange","event","funct","_handleSelectionChange","targetlist","availabilityChips","element","tagsChips","isRegister","datum","Dialog","paperFullWidth","open","openStatus","onClose","closeFunction","TransitionComponent","Tooltip","arrow","current","click","hidden","Icon","disabled","FormControl","FormLabel","RadioGroup","row","Radio","Select","MenuItem","step","displayEmpty","fromHour","Number","fromMinute","toHour","toMinute","newTime","newTimes","handleAddTime","handleAddTag","ProfileContent","setProfile","fetched","setFetched","picContainer","icon","details","content","contexHeader","contexBody","availabilities","timeslot","setOpen","handleClose","editable","ProfilePop","fabStyle","bottom","StudentHome","data","setData","lastKeyUser","setLastUser","lastKeyTutor","setLastTutor","hasMoreItems","setMore","OpenProfile","setOpenProfile","OpenAsk","setOpenAsk","selectedPersonId","setPersonId","selectedPersonName","setPersonName","dataKey","setdataKey","handleOpenProfile","handleAskClose","loader","LinearProgress","items","map","ListItem","List","pageStart","loadMore","res","newKey","newData","LastEvaluatedKey","hasMore","aws","QuestionCard","confirmTag","isRecom","information","isOwner","user","user_picture","tutor_picture","time","handleHelp","handleCancel","response","setAsk","setName","setAttachment","setQuestion","setCreatedAt","handleOpenHelp","handleHelpClose","lastKey","PublicHome","minWidth","bullet","transform","textAlign","pos","marginBottom","footer","fontWeight","ClientHome","Home","registered","setRegister","loading","setLoading","given_name","family_name","preLoginToken","setToken","login","Token","parts","match","getUrlVars","Promise","all","preLogin","CircularProgress","cancelPop","DialogContent","DialogContentText","DialogActions","question_keys","deleteQuestion","autoFocus","StudentHistory","setLast","openUser","setOpenUser","selectedUser","setUser","openQuestion","setOpenQuestion","selectedQuestion","resetItems","handleUserOpen","handleQuestionOpen","TutorHistory","History","Profile","SearchQuestion","keywords","loadItems","SearchTutor","Search","App","userToken","sessionStorage","getItem","setDark","clear","setItem","CssBaseline","exact","path","render","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.238daf43.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();","import React, { useState } from 'react';\nimport {fade, makeStyles, createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\nimport { Redirect, useHistory} from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport { useEffect } from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Switch from '@material-ui/core/Switch';\nimport ForumIcon from '@material-ui/icons/Forum';\nconst Login = () =>{\n    window.location.href='https://ccfinalsy2938.auth.us-east-1.amazoncognito.com/login?client_id=1d1mb2ktfap98hgif1iigjb9fk&response_type=token&scope=aws.cognito.signin.user.admin+email+openid+phone+profile&redirect_uri=https://ludecomposition.github.io/login';}\n\nfunction Switches(props: any) {\n    return (\n        <div>\n            <Switch\n            checked={props.isDark}\n            onChange={props.onChange}\n            name=\"isDark\"\n            inputProps={{ 'aria-label': 'primary checkbox'}}\n            id='switch'\n            />         \n        </div>\n    );\n}\n\n\nexport default function Menu(props: any) {\n    const [toShow, setShow] = useState(true);\n    useEffect(() => {\n        setShow(true);\n    },[])\n    const handleNavigation = (e: { currentTarget: any; }) => {\n        const window = e.currentTarget\n        if (window.scrollY == 0) {\n            setShow(true)\n        } else{\n            setShow(false)\n        }\n    }\n    window.addEventListener('scroll', e => handleNavigation(e));\n    const isLogin = (props.token != 'null')\n    const isDark = props.isDark;\n    const useStyles = makeStyles((theme) => ({\n        root: {\n        border: 'None',\n        flexGrow: 1,\n        },\n        menuButton: {\n        marginRight: theme.spacing(2.5),\n        },\n        title: {\n        flexGrow: 1,\n        },\n        search: {\n            position: 'relative',\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: fade(theme.palette.common.white, 0.15),\n            '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        }},\n        searchIcon: {\n            padding: theme.spacing(0, 2),\n            height: '100%',\n            position: 'absolute',\n            pointerEvents: 'none',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        inputRoot: {\n        color: 'inherit',\n        },\n        inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n        },\n    }));\n    const classes = useStyles();\n    const history = useHistory();\n    var primaryColor = '';\n    var secondaryColor = '';\n    if (isLogin) {\n        if (isDark) {\n            primaryColor = '#333333'\n            secondaryColor = '#ffffff'\n        } else {\n            primaryColor = '#dc95ee'\n            secondaryColor = '#000000'\n        }\n    } else {\n        primaryColor = '#9492ef'\n        secondaryColor = '#ffffff'\n    }\n    const theme = createMuiTheme({\n        palette: {\n            primary: {\n            main: primaryColor,\n            },\n            secondary: {\n            main: secondaryColor,\n            },\n        },});\n    const [searchWords, setSearch] = useState('');\n\n    \n    return (\n    <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n            <AppBar position=\"fixed\" elevation={0} color=\"transparent\">\n            <Container maxWidth=\"lg\">\n            <Toolbar>\n                {\n                    toShow\n                    ?(\n                        <Box display=\"inline\">\n                        <Button \n                        onClick={() => {setSearch('');history.push('/')}}>\n                        <h2 style={{fontFamily:'Righteous', color:(isLogin)?((isDark)?'#ffffff':'#000000'):'#ffffff'}}>YouTutor</h2></Button> \n                        </Box>\n                    )\n                    :(\n                        <div/>\n                    )\n                }\n                {\n                    (isLogin && toShow)?\n                    (\n                    <div className={classes.search}>\n                    <div className={classes.searchIcon}>\n                        <SearchIcon />\n                    </div>\n                    <form onSubmit={\n                        (e) => {\n                            if (searchWords !== ''){\n                                history.push(\n                                    {\n                                        pathname: '/search',\n                                        search: '?q='+searchWords,\n                                        state:{\n                                            q:searchWords\n                                        }\n                                    }\n                                );\n                                e.preventDefault();\n                            }\n                        }\n                    }>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                            root: classes.inputRoot,\n                            input: classes.inputInput,\n                            }}\n                            value={searchWords}\n                            onChange={(e) => {setSearch(e.target.value)}}\n                        />\n                    </form>\n                    </div>\n                    )\n                    :(\n                        <div/>\n                    )\n                }\n                <Typography variant=\"h6\" className={classes.title}>\n                </Typography>\n                <Box display=\"inline\">\n                {\n                    isLogin?\n                    (\n                        <Switches isDark={isDark} onChange={props.switchRole}/>\n                    )\n                    :(\n                        <div/>\n                    )\n                }\n                </Box>\n                <Box mx=\"auto\" display=\"inline\">\n                {\n                    isLogin?\n                    (\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n                        onClick={() => {setSearch('');history.push('/history')}}\n                        >\n                        <ForumIcon />\n                        </IconButton>\n                    )\n                    :(\n                        <div/>\n                    )\n                }\n                {\n                    isLogin?\n                    (<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" \n                    onClick={() => {setSearch('');history.push('/profile')}}>\n                    <PersonIcon />\n                    </IconButton>)\n                    :(<IconButton edge=\"start\" className={classes.menuButton} color=\"secondary\" aria-label=\"menu\" \n                        onClick={Login}>\n                    <CreateIcon />\n                    </IconButton>)\n                }\n                {\n                    isLogin?\n                    (\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n                        onClick={() => {\n                            props.logout();\n                            <Redirect to='/'/>\n                        }}>\n                        <PowerSettingsNewIcon />\n                        </IconButton>\n                    )\n                    :(<div/>)\n                }\n                </Box>\n                \n            </Toolbar>\n            </Container>\n            </AppBar>\n        </div>\n    </ThemeProvider>\n    );}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nexport default function Header(props:any) {\n    const useStyles = makeStyles({\n        root: {\n            borderRadius: 0,\n            boxShadow: \"none\",\n        },\n        header:{\n            fontSize: 24,\n            fontFamily: 'New Tegomin',\n            marginTop: '15%',\n            marginLeft: '1%'\n        }\n        });\n    const classes = useStyles();\n    return (\n    <Card className={classes.root} style={{background:(props.isDark)\n                                            ?'#333333'\n                                            :'linear-gradient(to bottom, #dc95ee, #ffffff)'}}>\n        <Container maxWidth=\"lg\">\n        <CardContent>\n        <Typography component='header' className={classes.header}>\n            <h2>{props.text}</h2>\n        </Typography>\n        </CardContent>\n        </Container>\n    </Card>\n);}","\nimport React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\n\nexport default function ProfileCard(props: any) {\n    \n    let chips: Array<any> = [];\n    props.profile.tags.forEach(\n        function(value: any) {\n            chips.push(<Chip label={value} size=\"small\" variant=\"outlined\"/>)\n            if (chips.length > 5) {\n                chips.shift();\n            }\n        }\n    )\n    const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width:'60%',\n        },\n    avatars: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        },\n    button: {\n\n    }\n    }),\n    );\n    const classes = useStyles();\n    // console.log(history);\n    return (\n    <Card className={classes.root}>\n        <CardContent>\n        <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n            <Grid item xs={2}>\n            <Button size=\"small\" onClick={() => {props.handleProfile(props.profile.user_id)}}>\n                <Avatar alt={props.profile.first_name + ' ' + props.profile.last_name} \n                src={props.profile.picture} className={classes.avatars}/>\n            </Button>\n            </Grid>\n            <Grid item xs={7}>\n                <Typography gutterBottom variant=\"subtitle1\">\n                    {props.profile.first_name + ' ' + props.profile.last_name}\n                </Typography>\n            </Grid>\n            <Grid item xs={3}>\n                <Typography variant=\"body2\" gutterBottom>\n                {props.profile.school}\n                </Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"body2\" gutterBottom>\n                    <div>\n                        {\n                        (props.profile.degree == 'K12' || props.profile.degree ==  'Others')\n                        ?(\n                            props.profile.degree\n                        )\n                        :(\n                            props.profile.degree + ' in ' + props.profile.major\n                        )}\n                    </div>\n                    \n                </Typography>\n            </Grid>\n            <Grid item xs={12} >\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                    {props.profile.introduction}\n                </Typography>\n            </Grid>\n            <Grid container justify=\"flex-start\" xs={11} alignItems=\"center\">\n                {chips}\n            </Grid>\n            <Grid container justify=\"flex-end\" xs={1} alignItems=\"flex-end\">\n                    <CardActions>\n                    <Button variant=\"outlined\" size=\"small\" \n                    onClick={() => {props.handleAsk(props.profile.user_id, props.profile.first_name + ' ' + props.profile.last_name)}}>{'ask'}</Button>\n                    </CardActions>\n                </Grid>\n        </Grid>\n        </CardContent>\n    </Card>\n    );\n}","import React, { useState, useEffect, useRef} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\nimport { FormGroup } from '@material-ui/core';\n\nvar UPLOAD = 'https://gr73qrcwnl.execute-api.us-east-1.amazonaws.com/v1/question/attachment'\nvar QUESTION = 'https://gr73qrcwnl.execute-api.us-east-1.amazonaws.com/v1/question/'\n\nexport default function QuestionForm(props) {\n    \n    const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n    card: {\n        background:(props.isDark)?('#424242'):('#f2f3f5')\n    },\n    headerSize: {\n        width:'30ch',\n    },\n    form: {\n        margin: theme.spacing(4)\n    }\n    }))\n    const classes = useStyles();\n    const [currTag, setTag] = useState('');\n    const [tags, setTags] = useState<string[]>(props.tags);\n    // const [chips, setChip] = useState<any[]>([]);\n    const [sendEmail, checkEmail] = useState(false);\n    const [currTitle, setTitle] = useState('');\n    const [currDetail, setDetail] = useState('');\n    const [currPath, setPath] = useState('');\n    const [currFile, setFile] = useState('');\n    const [filetype, setfiletype] = useState('');\n    const [currStartTime, setStartTime] = useState('');\n    const [currEndTime, setEndTime] = useState('');\n\n    function _handleTextFieldChange(e, setFunc){\n        setFunc(\n            e.target.value\n        )\n    }\n    function _handleFileInput(e){\n        setFile(e.target.files[0]);\n        setPath(e.target.value);\n        if (e.target.files[0]){\n            setfiletype(e.target.files[0].type);\n        }\n    }\n    function handelDeleteTag(currTag:string) {\n        setTags(\n            tags.filter((tag) => tag !== currTag)\n        )\n    }\n    function handleAddTag() {\n        if (tags.includes(currTag) || tags.length >= 5 || currTag.length == 0 || currTag.split(' ').length == 0) {\n            return\n        }\n        else {\n            let newtags = tags.concat(currTag);\n            setTags(newtags)\n        }\n    }\n    const chips: any[] = [];\n    if (props.ask) {\n        tags.forEach(\n            (tag) => {\n                chips.push(\n                    <Chip\n                    size=\"small\"\n                    label={tag}\n                    onDelete={() => {handelDeleteTag(tag)}}\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                />\n                )\n            }\n        )\n    } else{\n        tags.forEach(\n            (tag) => {\n                chips.push(\n                    <Chip\n                    size=\"small\"\n                    label={tag}\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                />\n                )\n            }\n        )\n    }\n    function handleSubmit() {\n        if (props.ask) {\n            const nowTime = Date.now();\n            if  (props.email !== 'Null') {\n                if (currTitle === '' || currStartTime === '' || currEndTime === '') {\n                    alert('please fill in required fields');\n                    return\n                }\n                const startTime = Date.parse(currStartTime);\n                const endTime = Date.parse(currEndTime);\n                \n                if (nowTime >= startTime || nowTime >= endTime) {\n                    alert('please fill in times in the future');\n                    return\n                }\n                if (startTime >= endTime) {\n                    alert('end time be after start time');\n                    return\n                }\n            }\n    \n            var file_link = ''\n            if (currPath!=='') {\n                var filename = props.token.email+ '_'+ String(new Date().getTime())+'_'+ currPath.split('\\\\')[currPath.split('\\\\').length-1]\n                filename = filename.replace(/\\s/g, '');\n                \n    \n                var upload_headers = {\n                    \"Access-Control-Allow-Headers\": \"*\",\n                    'token': props.token.id_token,\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"PUT\",\n                    'Content-Type':  filetype,\n                    'Accept': filetype,\n                    'Access-Control-Allow-Credentials' : 'true',\n                }\n                fetch(\n                    UPLOAD + '/' + filename, {\n                        method: 'PUT',\n                        headers: upload_headers,\n                        body: currFile\n                    }\n                ).catch(\n                    err => {\n                        alert('failed to upload file')\n                        return\n                    }\n                )\n                file_link = 'https://ccfinalattachment.s3.amazonaws.com/' + filename.replace(/@/g, '%40')\n            }\n            var tutor_id = props.email;\n            let body = {\n                send_email: sendEmail,\n                title: currTitle,\n                detail: currDetail,\n                attachment: file_link,\n                start_time: (props.email !== 'Null') ?(currStartTime) :('Null'),\n                end_time: (props.email !== 'Null') ? currEndTime : 'Null',\n                tags: tags,\n                tutor_id: tutor_id,\n                tutor_name: props.name,\n            }\n            var put_headers = {\n                \"Access-Control-Allow-Headers\": \"*\",\n                'token': props.token.id_token,\n                \"access_token\": props.token.access_token,\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"*\",\n                'Access-Control-Allow-Credentials' : 'true',\n            }\n            fetch(\n                QUESTION, {\n                    method: 'PUT',\n                    headers: put_headers,\n                    body: JSON.stringify(body)\n                }\n            ).then(\n                resp => resp.json()\n            ).then(\n                resp => {\n                    alert('question ask request submitted')\n                    props.close()\n                }\n            ).catch(\n                err => {\n                    alert('failed to submit question')\n                }\n            )\n        } else {\n            if (currStartTime === '' || currEndTime === '') {\n                alert('please fill in required fields');\n                return\n            }\n            const nowTime = Date.now();\n            const startTime = Date.parse(currStartTime);\n            const endTime = Date.parse(currEndTime);\n            if (nowTime >= startTime || nowTime >= endTime) {\n                alert('please fill in times in the future');\n                return\n            }\n            if (startTime >= endTime) {\n                alert('end time be after start time');\n                return\n            }\n            var post_headers = {\n                \"Access-Control-Allow-Headers\": \"*\",\n                'token': props.token.id_token,\n                \"access_token\": props.token.access_token,\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"*\",\n                'Access-Control-Allow-Credentials' : 'true',\n            }\n            var body = {\n                send_email: sendEmail,\n                question_id: props.question_id,\n                created_at: props.created_at,\n                start_time: currStartTime,\n                end_time: currEndTime,\n                user_id: props.email,\n                user_name: props.name,\n                status: 'accepted'\n            }\n            fetch(\n                QUESTION, {\n                    method: 'POST',\n                    headers: post_headers,\n                    body: JSON.stringify(body)\n                }\n            ).then(() => {\n                alert('request sent')\n                props.close()\n                props.reload()\n            })\n            .catch(\n                err => {\n                    console.log(err)\n                    alert('failed to submit question')\n                }\n            )\n        }\n    }\n    \n    return (\n        <div>\n        <Container maxWidth='md'>\n        <Card className={classes.card}>\n        <FormGroup className={classes.form} onSubmit={handleSubmit}>\n            <Grid container spacing={2}>\n                {\n                    (props.email != 'Null')\n                    ?(\n                        <Grid item xs={12}>\n                            <Grid container spacing={1} alignItems=\"flex-end\">\n                                <Grid item>\n                                    <AccountCircle />\n                                </Grid>\n                                <Grid item>\n                                    <TextField\n                                    className={classes.headerSize}\n                                    label={(props.ask)?(\"ask\"):(\"answer\")}\n                                    defaultValue={props.name}\n                                    InputProps={{\n                                        readOnly: true\n                                    }}\n                                    />\n                                </Grid>\n                                <Grid item>\n                                <FormControlLabel \n                                control={<Checkbox name=\"email\" color=\"primary\" \n                                            checked={sendEmail} \n                                            onChange={() => {checkEmail(!sendEmail)}}/>} \n                                label=\"send notification by email\" \n                                />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    )\n                    :(\n                        <div/>\n                    )\n                }\n                <Grid item xs={12}>\n                    {\n                        (props.ask)\n                        ?(\n                            <TextField\n                            required\n                            className={classes.headerSize}\n                            label=\"Title\"\n                            value={currTitle}\n                            onChange={(e) => {_handleTextFieldChange(e, setTitle)}}\n                            />\n                        )\n                        :(\n                            <TextField\n                            required\n                            className={classes.headerSize}\n                            label=\"Title\"\n                            defaultValue={props.title}\n                            InputProps={{\n                                readOnly: true\n                            }}\n                            />\n                        )\n                    }\n                    \n                </Grid>\n                <Grid item xs={12}>\n                    {\n                        (props.ask)\n                        ?(\n                            <TextField\n                            fullWidth\n                            multiline\n                            label=\"Detail\"\n                            rows={6}\n                            variant=\"outlined\"\n                            value={currDetail}\n                            onChange={(e) => {_handleTextFieldChange(e, setDetail)}}\n                            />\n                        )\n                        :(\n                            <TextField\n                            fullWidth\n                            multiline\n                            label=\"Detail\"\n                            rows={6}\n                            variant=\"outlined\"\n                            defaultValue={props.detail}\n                            InputProps={{\n                                readOnly: true\n                            }}\n                            />\n                        )\n                    }\n                </Grid>\n                <Grid item xs={12}>\n                    {\n                        (props.ask)\n                        ?(\n                            <input type=\"file\"\n                            accept=\"image/png, .pdf, image/jpeg, image/jpg\"\n                            value={currPath}\n                            onChange={(e) => {_handleFileInput(e)}}\n                            />\n                        )\n                        :(\n                            <a href={props.attachment}>attachment</a>\n                        )\n                    }\n                </Grid>\n                {\n                    (props.ask)\n                    ?(\n                        <Grid item xs={12} direction=\"row\">\n                            <TextField \n                            size=\"small\"\n                            className={classes.headerSize} \n                            value={currTag}\n                            label=\"Tag\"\n                            onChange={(e) => {_handleTextFieldChange(e, setTag)}}\n                            />\n                        <Button size=\"small\" onClick={handleAddTag}>add</Button>\n                        </Grid>\n                    )\n                    :(\n                        <div/>\n                    )\n                }\n                <Grid item xs={12}>\n                {chips}\n                </Grid>\n                \n                {\n                    (props.email != 'Null')\n                    ?(\n                        <div>\n                        <Grid item xs={12}>\n                            <Typography variant='body2' color=\"textSecondary\">\n                                    Requested Time\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                        <form noValidate>\n                            <TextField\n                                required\n                                id=\"start-time\"\n                                label=\"Start Time\"\n                                type=\"datetime-local\"\n                                value = {currStartTime}\n                                onChange = {(e) => {_handleTextFieldChange(e, setStartTime)}}\n                                InputLabelProps={{\n                                shrink: true,\n                                }}\n                            />\n                        </form>\n                        </Grid>\n                        <Grid item xs={6}>\n                        <form noValidate>\n                            <TextField\n                                required\n                                id=\"end-time\"\n                                label=\"End Time\"\n                                type=\"datetime-local\"\n                                value = {currEndTime}\n                                onChange = {(e) => {_handleTextFieldChange(e, setEndTime)}}\n                                InputLabelProps={{\n                                shrink: true,\n                                }}\n                            />\n                        </form>\n                    </Grid>\n                    </div>\n                    )\n                    :(\n                        <div/>\n                    )\n                }\n                \n                <Grid container direction=\"row\">\n                    <Grid item xs={11}></Grid>\n                    <Grid item xs={1}>\n                        <Button variant=\"outlined\"\n                        type=\"submit\" onClick={() => {handleSubmit()}}\n                        >{(props.email != 'null')\n                                                        ?((props.ask)?'Ask':'Enter')\n                                                        :'Post'}</Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </FormGroup>\n        </Card>\n        </Container>\n        </div>\n    )\n}","import React, { useState, useRef } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport Dialog from '@material-ui/core/Dialog';\nimport { FormGroup, Icon } from '@material-ui/core';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement },\n    ref: React.Ref<unknown>,\n) {\nreturn <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nvar UPLOAD = 'https://gr73qrcwnl.execute-api.us-east-1.amazonaws.com/v1/user/picture'\nvar EDIT = 'https://gr73qrcwnl.execute-api.us-east-1.amazonaws.com/v1/user'\n\n// props id_token, access_token, isDark, email, profile\n\nexport default function Register(props) {\n    const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        dialogCustomizedWidth: {\n            'max-width': '100%',\n            backgroundColor: 'transparent',\n            boxShadow: 'none',\n            },\n        card: {\n            background:(props.isDark)?('#424242'):('#f2f3f5')\n        },\n        form: {\n            margin: theme.spacing(4)\n        }\n    }))\n    const classes = useStyles()\n    const profile = props.profile\n\n    const iconRef = useRef<HTMLInputElement>(null);\n    const [firstName, setfirstName] = useState(profile.first_name);\n    const [lastName, setlastName] = useState(profile.last_name);\n    const [gender, setGender] = useState(profile.gender);\n    const [school, setSchool] = useState(profile.school);\n    const [degree, setDegree] = useState(profile.degree);\n    const [major, setMajor] = useState(profile.major);\n    const [tutor, setTutor] = useState(String(profile.tutor));\n    const [availability, setAvailability] =  useState<string[]>(profile.availability);\n    const [currTag, setTag] = useState('');\n    const [tags, setTags] = useState<string[]>(profile.tags);\n    const [intro, setIntro] = useState(profile.introduction)\n    const [fromTime, setFromTime] = useState('08:00');\n    const [toTime, setToTime] = useState('08:30');\n    const [weekDay, setDay] = useState('Monday');\n    const [currIcon, setIcon] = useState(profile.picture)\n\n    function _handleTextFieldChange(e, setFunc){\n        setFunc(\n            e.target.value\n        )\n    }\n    const _handleOptionChange = (event: React.ChangeEvent<{ value: unknown }>, funct) => {\n        funct(event.target.value);\n    };\n    const _handleSelectionChange = (event: React.ChangeEvent<HTMLInputElement>, funct) => {\n        funct((event.target as HTMLInputElement).value);\n    };\n    function _handleFileInput(e){\n        var currPath = e.target.value;\n        var filename = profile.user_id+ '_'+ String(new Date().getTime())+'_'+ currPath.split('\\\\')[currPath.split('\\\\').length-1]\n        filename = filename.replace(/\\s/g, '');\n        var currFile = e.target.files[0];\n        if (currFile) {\n            console.log(currFile);\n            console.log(filetype);\n            var filetype = currFile.type;\n            var upload_headers = {\n                \"Access-Control-Allow-Headers\": \"*\",\n                'token': props.token.id_token,\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"PUT\",\n                'Content-Type':  filetype,\n                'Accept': filetype,\n                'Access-Control-Allow-Credentials' : 'true',\n            }\n            fetch(\n                UPLOAD + '/' + filename, {\n                    method: 'PUT',\n                    headers: upload_headers,\n                    body: currFile\n                }\n            )\n            .then(\n                () =>{\n                var file_link = 'https://ccfinalprofilephoto.s3.amazonaws.com/' + filename.replace(/@/g, '%40')\n                setIcon(file_link)\n            })\n            .catch(\n                err => {\n                    alert('failed to upload file')\n                }\n            )\n        }\n    }\n    function handelDeleteTag(currTag:string, setFunc, targetlist) {\n        setFunc(\n            targetlist.filter((tag) => tag !== currTag)\n        )\n    }\n    function handleAddTag() {\n        if (tags.includes(currTag) || tags.length >= 5 || currTag.length == 0 || currTag.split(' ').length == 0) {\n            return\n        }\n        else {\n            let newtags = tags.concat(currTag);\n            setTags(newtags)\n        }\n    }\n    function handleAddTime() {\n        var fromHour = Number(fromTime.split(':')[0]); \n        var fromMinute = Number(fromTime.split(':')[1]); \n        var toHour = Number(toTime.split(':')[0]); \n        var toMinute = Number(toTime.split(':')[1]); \n        if (fromHour <= toHour){\n            if (fromHour === toHour){\n                if (fromMinute <= toMinute){\n                    let newTime = fromTime + '-' + toTime + ',' + weekDay;\n                    if (!availability.includes(newTime)){\n                        let newTimes = availability.concat(newTime);\n                        setAvailability(newTimes);\n                    }\n                }\n            }else{\n                let newTime = fromTime + '-' + toTime + ',' + weekDay;\n                if (!availability.includes(newTime)){\n                    let newTimes = availability.concat(newTime);\n                    setAvailability(newTimes);\n                }\n            }\n        }\n    }\n\n    var availabilityChips: any[] = []\n    availability.forEach(\n        (element) => {\n            availabilityChips.push(\n                <Chip\n                    key={element}\n                    size=\"small\"\n                    label={element}\n                    onDelete={() => {handelDeleteTag(element, setAvailability, availability)}}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                />\n            )\n        }\n    )\n    var tagsChips: any[] = []\n    tags.forEach(\n        (element) => {\n            tagsChips.push(\n                <Chip\n                    key={element}\n                    size=\"small\"\n                    label={element}\n                    onDelete={() => {handelDeleteTag(element,setTags, tags)}}\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                />\n            )\n        }\n    )\n    function handleSubmit(){\n        if (firstName===''||lastName===''||school===''||major===''){\n            alert('please fill in required fields')\n            return\n        }\n        var headers = {\n            \"Access-Control-Allow-Headers\": \"*\",\n            'token': props.token.id_token,\n            'access_token': props.token.access_token,\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET\",\n            'Content-Type':  'application/json',\n            'Access-Control-Allow-Credentials' : 'true',\n        }\n        var body = {\n            isRegister: props.isRegister,\n            user_id: profile.user_id,\n            availability: availability,\n            degree: degree,\n            first_name: firstName,\n            gender: gender,\n            introduction: intro,\n            last_name: lastName,\n            major: major,\n            picture: currIcon,\n            school: school,\n            tags: tags,\n            tutor: tutor === \"true\"\n        }\n        fetch(\n            EDIT, {\n                method: 'POST',\n                headers:headers,\n                body:JSON.stringify(body)\n            }\n        )\n        .then(resp => resp.json())\n        .then(datum => {\n            alert(datum)\n            props.close()\n            props.reload()\n        })\n        .catch(\n            () => {\n                alert('failed to register/edit')\n            }\n        )\n    }\n    return (\n        <Dialog\n        fullWidth\n        classes={{ paperFullWidth: classes.dialogCustomizedWidth }}\n        open={props.openStatus}\n        onClose={props.closeFunction}\n        TransitionComponent={Transition}\n        >\n        <Container maxWidth='md'>\n            <Card className={classes.card}>\n                <FormGroup className={classes.form} onSubmit={handleSubmit}>\n                <Grid container spacing={2} alignItems=\"flex-end\">\n                    <Grid item xs={12}>\n                        <Tooltip title=\"edit\" arrow>\n                            <IconButton\n                            onClick={()=>{iconRef.current?.click()}}\n                            >\n                                <Avatar \n                                alt = {profile.first_name + ' ' + profile.last_name}\n                                src = {currIcon}\n                                ></Avatar>\n                            </IconButton>\n                        </Tooltip>\n                        <input\n                            accept=\"image/*\"\n                            type=\"file\"\n                            id=\"icon-button-file\"\n                            hidden\n                            value={\"\"}\n                            onChange={(e) => {\n                                _handleFileInput(e);\n                                console.log(Icon);\n                            }}\n                            ref={iconRef}\n                        />\n                    </Grid>\n                    <Grid item xs={3}>\n                        <TextField\n                        label=\"email\"\n                        disabled\n                        value={profile.user_id}\n                        required\n                        />\n                    </Grid>\n                    <Grid item xs={3}>\n                    <FormControl component=\"fieldset\" required>\n                        <FormLabel component=\"legend\">gender</FormLabel>\n                        <RadioGroup  row value={gender} onChange={(e)=>{_handleSelectionChange(e, setGender)}}>\n                        <FormControlLabel value=\"F\" control={<Radio />} label=\"F\" />\n                        <FormControlLabel value=\"M\" control={<Radio />} label=\"M\" />\n                        </RadioGroup>\n                    </FormControl>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <TextField\n                            // className={classes.headerSize}\n                            label=\"first name\"\n                            value={firstName}\n                            required\n                            onChange={(e) => {_handleTextFieldChange(e, setfirstName)}}\n                        />\n                    </Grid>\n                    <Grid item xs={3}>\n                        <TextField\n                            // className={classes.headerSize}\n                            label=\"last name\"\n                            value={lastName}\n                            required\n                            onChange={(e) => {_handleTextFieldChange(e, setlastName)}}\n                        />\n                    </Grid>\n                    <Grid item xs={3}>\n                        <TextField\n                            required\n                            label=\"school\"\n                            value={school}\n                            onChange={(e) => {_handleTextFieldChange(e, setSchool)}}\n                        />\n                    </Grid>\n                    <Grid item xs={3}>\n                        <FormControl required>\n                        <Select\n                        value={degree}\n                        onChange={(e) => {_handleOptionChange(e, setDegree)}}\n                        >\n                        <MenuItem value={'B.S'}>B.S</MenuItem>\n                        <MenuItem value={'B.A'}>B.A</MenuItem>\n                        <MenuItem value={'M.S'}>M.S</MenuItem>\n                        <MenuItem value={'M.A'}>M.A</MenuItem>\n                        <MenuItem value={'M.F.A'}>M.F.A</MenuItem>\n                        <MenuItem value={'PhD'}>Ph.D</MenuItem>\n                        <MenuItem value={'Others'}>Others</MenuItem>\n                        </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <TextField\n                            required\n                            label=\"major\"\n                            value={major}\n                            onChange={(e) => {_handleTextFieldChange(e, setMajor)}}\n                        />\n                    </Grid>\n                    <Grid item xs={3}>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">discovered as tutor</FormLabel>\n                            <RadioGroup row value={tutor} onChange={(e)=>{_handleSelectionChange(e, setTutor)}}>\n                            <FormControlLabel value={'true'} control={<Radio />} label=\"Yes\" />\n                            <FormControlLabel value={'false'} control={<Radio />} label=\"No\" />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12}>\n                            <TextField\n                            fullWidth\n                            multiline\n                            label=\"Introduction\"\n                            rows={6}\n                            variant=\"outlined\"\n                            value={intro}\n                            onChange={(e) => {_handleTextFieldChange(e, setIntro)}}\n                            />\n                    </Grid>\n                    <Grid item xs={12}>\n                        {availabilityChips}\n                    </Grid>\n                    <Grid item xs={12}>\n                        {tagsChips}\n                    </Grid>\n                    <Grid item xs={6} style={{ display: 'flex' }}>\n                        <TextField\n                            type=\"time\"\n                            label=\"from\"\n                            value={fromTime}\n                            onChange={(e) => {_handleTextFieldChange(e, setFromTime)}}\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            inputProps={{\n                            step: 1800, // 5 min\n                            }}\n                        />\n                        <TextField\n                            type=\"time\"\n                            label=\"to\"\n                            value={toTime}\n                            onChange={(e) => {_handleTextFieldChange(e, setToTime)}}\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            inputProps={{\n                            step: 1800, // 5 min\n                            }}\n                        />\n                        <Select\n                        value={weekDay}\n                        onChange={(e) => {_handleOptionChange(e, setDay)}}\n                        displayEmpty\n                        >\n                        <MenuItem value=\"\">\n                        </MenuItem>\n                        <MenuItem value={'Monday'}>Monday</MenuItem>\n                        <MenuItem value={'Tuesday'}>Tuesday</MenuItem>\n                        <MenuItem value={'Wednesday'}>Wednesday</MenuItem>\n                        <MenuItem value={'Thursday'}>Thursday</MenuItem>\n                        <MenuItem value={'Friday'}>Friday</MenuItem>\n                        <MenuItem value={'Saturday'}>Saturday</MenuItem>\n                        <MenuItem value={'Sunday'}>Sunday</MenuItem>\n                        </Select>\n                        <Button size='small'\n                        onClick={() => {handleAddTime()}}\n                        >add</Button>\n                    </Grid>\n                    <Grid item xs={4} style={{ display: 'flex' }}>\n                        <TextField \n                            size=\"small\"\n                            value={currTag}\n                            label=\"Add tag\"\n                            onChange={(e) => {_handleTextFieldChange(e, setTag)}}\n                        />\n                        <Button size='small'\n                        onClick={() => {handleAddTag()}}\n                        >add</Button>\n                    </Grid>\n                    <Grid item xs={2} style={{ display: 'flex' }}>\n                        <Button size='small'\n                        onClick={() => {handleSubmit()}}\n                        color='secondary'\n                        >Submit</Button>\n                    </Grid>\n                </Grid>\n                </FormGroup>\n            </Card>\n        </Container>\n        </Dialog>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport Register from './Register'\nvar URL = 'https://gr73qrcwnl.execute-api.us-east-1.amazonaws.com/v1/user/'\nexport default function ProfileContent(props) {\n    const [profile, setProfile] = useState({\n        availability: [], \n        tags:[],\n        first_name: 'null',\n        last_name: 'null',\n        user_id: 'null',\n        tutor: false,\n        school: 'null',\n        degree: 'null',\n        picture: 'null',\n        major: 'null',\n        introduction: 'null',\n        gender: 'null'\n        });\n    const [fetched, setFetched] = useState(false);\n    const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        card:{\n            background: (props.isDark) ?('#333333') :('#ffffff'),\n        },\n        picContainer: {\n        display: 'flex',\n        '& > *': {\n            marginLeft: theme.spacing(4),\n            marginTop: theme.spacing(4),\n        },},\n        icon: {\n        width: theme.spacing(12),\n        height: theme.spacing(12),\n        },\n        name: {\n            marginTop: theme.spacing(6)\n        },\n        details: {\n            background: (props.isDark) ?('#303030') :('#f2f3f5'),\n            margin: theme.spacing(4)\n        },\n        content:{\n            margin: theme.spacing(2)\n        },\n        contexHeader: {\n            marginLeft: theme.spacing(4),\n            marginTop: theme.spacing(.5)\n        },\n        contexBody: {\n            marginLeft: theme.spacing(8),\n            marginRight: theme.spacing(8),\n            marginTop: theme.spacing(.5)\n        },\n        button:{\n            margin: theme.spacing(4)\n        }\n    }),\n    );\n    const classes = useStyles();\n    useEffect( () => {\n        var headers = {\n            \"Access-Control-Allow-Headers\": \"*\",\n            'token': props.token.id_token,\n            'access_token': props.token.access_token,\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET\",\n            'Content-Type':  'application/json',\n            'Access-Control-Allow-Credentials' : 'true',\n            \"user_id\": props.email\n        }\n        fetch(URL, {\n            method:'GET', \n            headers: headers\n        })\n        .then(resp => resp.json())\n        .then(datum => {\n            setProfile(datum);\n            setFetched(true);\n        });\n        // return () ={}; \n    },[])\n    let availabilities: Array<any> = [];\n    if (profile.availability) {\n        profile.availability.forEach(\n            function(timeslot: string) {\n                availabilities.push(\n                    <Grid item xs={3}>\n                    <Chip \n                    label={timeslot} \n                    variant=\"outlined\" \n                    color=\"primary\"\n                    /></Grid>)\n            }\n        )\n    }\n    let tags: Array<any> = [];\n    if (profile.tags){\n        profile.tags.forEach(\n            function(tag: string){\n                tags.push(\n                    <Grid item xs={2}>\n                    <Chip \n                    label={tag} \n                    variant=\"outlined\" \n                    color=\"secondary\"\n                    /></Grid>\n                )\n            }\n        )\n    }\n    const [openStatus, setOpen] = useState(false);\n    function handleOpen(){\n        setOpen(true);\n    }\n\n    function handleClose(){\n        setOpen(false);\n    }\n    return (\n        <div>\n        {\n            (fetched)\n            ?(\n        <Container maxWidth='md'>\n        <Card className={classes.card}>\n            <Grid container spacing={2}>\n            <Grid item xs={2}>\n                <div className={classes.picContainer}>\n                    <Avatar \n                    alt = {profile.first_name + ' ' + profile.last_name}\n                    src = {profile.picture}\n                    className={classes.icon}\n                    />\n                </div>\n            </Grid>\n            \n            <Grid item xs={8}>\n                <Typography variant=\"h4\" className={classes.name}>\n                {profile.first_name + ' ' + profile.last_name}\n                </Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <Container maxWidth='md'>\n                    <Card className={classes.details}>\n                        <Grid container spacing={2} direction=\"row\" className={classes.content}>\n                            <Grid item xs={6}>\n                                <Typography variant=\"body2\" className={classes.contexHeader} color=\"textSecondary\">\n                                    email / user id\n                                </Typography>\n                                <Typography variant=\"body1\" className={classes.contexBody}>\n                                    {profile.user_id}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography variant=\"body2\" className={classes.contexHeader} color=\"textSecondary\">\n                                    gender\n                                </Typography>\n                                <Typography variant=\"body1\" className={classes.contexBody}>\n                                    {profile.gender}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography variant=\"body2\" className={classes.contexHeader} color=\"textSecondary\">\n                                    school\n                                </Typography>\n                                <Typography variant=\"body1\" className={classes.contexBody}>\n                                    {profile.school}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography variant=\"body2\" className={classes.contexHeader} color=\"textSecondary\">\n                                    degree\n                                </Typography>\n                                <Typography variant=\"body1\" className={classes.contexBody}>\n                                    {profile.degree}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography variant=\"body2\" className={classes.contexHeader} color=\"textSecondary\">\n                                    major\n                                </Typography>\n                                {<Typography variant=\"body1\" className={classes.contexBody}>\n                                    {(profile.major == null) ?('N/A') :(profile.major)}\n                                </Typography>}\n                            </Grid>\n                            <Grid item xs={6}>\n                                {\n                                    (props.editable)\n                                    ?(\n                                    <div>\n                                    <Typography variant=\"body2\" className={classes.contexHeader} color=\"textSecondary\">\n                                        discovered as tutor\n                                    </Typography>\n                                    <Typography variant=\"body1\" className={classes.contexBody}>\n                                        {(profile.tutor)?('Yes'):('No')}\n                                    </Typography>\n                                    </div>\n                                    )\n                                    :(\n                                        <div/>\n                                    )\n                                }\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography variant=\"body2\" className={classes.contexHeader} color=\"textSecondary\">\n                                    introduction\n                                </Typography>\n                                <Typography variant=\"body1\" className={classes.contexBody}>\n                                    {profile.introduction}\n                                </Typography>\n                            </Grid>\n                            {\n                                (profile.tutor)\n                                ?(\n                                <Grid item xs={12}>\n                                <Typography variant=\"body2\" className={classes.contexHeader} color=\"textSecondary\">\n                                    weekly availabilities\n                                </Typography>\n                                <Typography variant=\"body1\" className={classes.contexBody}>\n                                    <Grid container spacing={1}>\n                                    {availabilities}\n                                    </Grid>\n                                </Typography>\n                                </Grid>\n                                )\n                                :(\n                                    <div/>\n                                )\n                            }\n                            <Grid item xs={12}>\n                                <Typography variant=\"body2\" className={classes.contexHeader} color=\"textSecondary\">\n                                    tags\n                                </Typography>\n                                <Typography variant=\"body1\" className={classes.contexBody}>\n                                    {\n                                        (tags.length>0)\n                                        ?(\n                                            <Grid container alignItems=\"flex-start\" justify=\"flex-start\">\n                                            {tags}\n                                            </Grid>\n                                        )\n                                        :(\n                                            <div>{'N/A'}</div>\n                                        )\n                                    }\n                                    \n                                </Typography>\n                            </Grid>\n                            \n                        </Grid>\n                    </Card>\n                    <Grid container className={classes.button}>\n                        <Grid item xs={10}/>\n                            {\n                                (props.editable)\n                                ?(\n                                    <div/>\n                                )\n                                :(\n                                    <div/>\n                                )\n                            }\n                        <Grid item xs={2}>\n                            {\n                                (props.editable)\n                                ?(\n                                <Button variant=\"outlined\" size=\"small\" onClick={()=>{handleOpen()}}>\n                                    edit\n                                </Button>\n                                )\n                                :(\n                                    <div/>\n                                )\n                            }\n                            \n                        </Grid>\n                    </Grid>\n\n                </Container>\n            </Grid>\n            </Grid>\n        </Card>\n        <Register \n            openStatus = {openStatus}\n            closeFunction={handleClose}\n            isDark={props.isDark}\n            profile={profile}\n            isRegister={false}\n            token={props.token}\n            close={handleClose}\n            reload={()=>{window.location.reload()}}\n            />\n        </Container>\n            )\n            :(\n                <div/>\n            )\n        }\n        </div>\n    )\n}","\nimport React, { useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport Slide from '@material-ui/core/Slide';\nimport ProfileConent from './ProfileContent'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        dialogCustomizedWidth: {\n            'max-width': '100%',\n            backgroundColor: 'transparent',\n            boxShadow: 'none',\n            }\n    }))\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement },\n    ref: React.Ref<unknown>,\n) {\nreturn <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nexport default function ProfilePop(props) {\n\n    const classes = useStyles()\n    return (\n        <Dialog\n        fullWidth\n        classes={{ paperFullWidth: classes.dialogCustomizedWidth }}\n        open={props.openStatus}\n        onClose={props.closeFunction}\n        TransitionComponent={Transition}\n        >\n        <ProfileConent isDark={props.isDark} \n                        email={props.user_id}\n                        editable={props.editable}\n                        token={props.token}\n                        />\n        </Dialog>\n    )\n}","import React, { useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Container from '@material-ui/core/Container';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport IconButton from '@material-ui/core/IconButton';\nimport ProfileCard from './ProfileCard'\nimport QuestionForm from './QuestionForm'\nimport ProfilePop from './ProfilePop'\n\nvar URL = 'https://gr73qrcwnl.execute-api.us-east-1.amazonaws.com/v1/recommender/user'\n\n\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement },\n    ref: React.Ref<unknown>,\n) {\nreturn <Slide direction=\"left\" ref={ref} {...props} />;\n});\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        dialogCustomizedWidth: {\n            'max-width': '100%',\n            backgroundColor: 'transparent',\n            boxShadow: 'none',\n            },\n        fabStyle:{\n            bottom: theme.spacing(2),\n            marginLeft: '70%',\n            position: 'sticky',\n            color:'secondary'\n        }\n    }))\nexport default function StudentHome(props:any) {\n    const [data, setData] = useState<any[]>([])\n    const [lastKeyUser, setLastUser] = useState('null');\n    const [lastKeyTutor, setLastTutor] = useState('null');\n    const [hasMoreItems, setMore] = useState(true)\n    const [OpenProfile, setOpenProfile] = React.useState(false);\n    const [OpenAsk, setOpenAsk] = React.useState(false);\n    const [selectedPersonId, setPersonId] = React.useState('null');\n    const [selectedPersonName, setPersonName] = React.useState('null');\n    const [dataKey, setdataKey] = useState<string[]>([]);\n    function loadItems() {\n        var headers = {\n            \"Access-Control-Allow-Headers\": \"*\",\n            'token': props.token.id_token,\n            'access_token': props.token.access_token,\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET\",\n            'Content-Type':  'application/json',\n            'Access-Control-Allow-Credentials' : 'true',\n        }\n        if (lastKeyUser !== 'null'){\n            headers['last_key'] = JSON.stringify({\n                                    user_id: lastKeyUser,\n                                    tutor_id: lastKeyTutor\n                                    })\n        }\n        fetch(URL, {\n            method: 'GET',\n            headers: headers\n        })\n        .then(res => res.json())\n        .then(datum => {\n            if (datum.data) {\n                if (hasMoreItems && datum.data.length > 0){\n                    if (!dataKey.includes(datum.data[0].user_id)) {\n                        const newKey = data.concat(datum.data[0].user_id);\n                        setdataKey(newKey)\n                        const newData = data.concat(datum.data);\n                        setData(newData)\n                    }\n                }\n                if (datum.LastEvaluatedKey){\n                    setLastUser(datum.LastEvaluatedKey.user_id);\n                    setLastTutor(datum.LastEvaluatedKey.tutor_id)\n                } else{\n                    setMore(false);\n                }\n            }\n        })\n    }\n    function handleOpenProfile(user_id: string) {\n        setOpenProfile(true);\n        setPersonId(user_id);\n    }\n    function handleAsk(user_id: string, name: string) {\n        setOpenAsk(true);\n        setPersonId(user_id);\n        setPersonName(name)\n    }\n    \n    function handleProfileClose() {\n        setOpenProfile(false);\n        setPersonId('null');\n    }\n    function handleAskClose(){\n        setOpenAsk(false);\n        setPersonId('null');\n        setPersonName('null');\n    }\n    const loader = <LinearProgress color=\"secondary\" />\n\n    var items = data.map(\n        element => (\n            <ListItem key={element.user_id}>\n            <ProfileCard profile={element} handleAsk={handleAsk} handleProfile={handleOpenProfile}/>\n            </ListItem>\n        )\n    )\n    const classes = useStyles();\n    return(\n        <div>\n        <Container maxWidth=\"lg\">\n        <List>\n            {\n                <InfiniteScroll\n                pageStart={0}\n                loadMore={loadItems}\n                hasMore={hasMoreItems}\n                loader={loader}>\n                {items}\n                </InfiniteScroll>\n            }\n        </List>\n        <IconButton onClick={() => {handleAsk('null', 'null')}} className={classes.fabStyle}>\n            <EditIcon color=\"secondary\"/>\n        </IconButton >\n        </Container>\n        <ProfilePop\n        openStatus={OpenProfile}\n        closeFunction={handleProfileClose}\n        isDark={false}\n        user_id={selectedPersonId}\n        editable={false}\n        token={props.token}\n        />\n        <Dialog\n        fullWidth\n        classes={{ paperFullWidth: classes.dialogCustomizedWidth }}\n        open={OpenAsk}\n        onClose={handleAskClose}\n        TransitionComponent={Transition}\n        >\n        {\n            (selectedPersonId == 'null')\n            ?(\n                <QuestionForm \n                aws={props.aws}\n                token={props.token}\n                email={'Null'} \n                name={'Null'} \n                isDark={false} \n                ask={true}\n                close={handleAskClose}\n                tags={[]}/>\n            )\n            :(\n                <QuestionForm \n                token={props.token}\n                email={selectedPersonId} \n                name={selectedPersonName}\n                isDark={false} \n                ask={true}\n                close={handleAskClose}\n                tags={[]}/>\n            )\n        }\n        \n        </Dialog>\n        </div>\n    )\n}","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\n\nconst URL = 'https://gr73qrcwnl.execute-api.us-east-1.amazonaws.com/v1/question/confirm'\n\nexport default function QuestionCard(props: any) {\n    var button:any = null;\n    var confirmTag: boolean = false;\n    if (props.isRecom) {\n        button = 'help'\n    } else{\n        if (props.information.status != 'finished' && props.information.status != 'expired') {\n            button = 'cancel'\n        }\n        if ((props.isDark && props.information.status === 'asked')|| (!props.isDark && props.information.status === 'accepted')) {\n            confirmTag = true;\n        }\n    }\n    let chips: Array<any> = [];\n    props.information.tags.forEach(\n        function(value: any) {\n            chips.push(<Chip label={value} size=\"small\" variant=\"outlined\"/>)\n            if (chips.length > 5) {\n                chips.shift();\n            }\n        }\n    )\n    const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width:'60%',\n            background: (props.isDark)\n                        ?((button!=null)\n                        ?(\n                            (props.isOwner)\n                            ?('#333333')\n                            :('#424242')\n                        ):(\n                            '#000000'\n                        )\n                        )\n                        :((button!=null)\n                        ?(\n                            (props.isOwner)\n                            ?('linear-gradient(to right bottom, #e54ce5, #f7cc66)')\n                            :('linear-gradient(to right bottom, #817bf7, #ed7bf3)')\n                        )\n                        :(\n                            '#ffffff'\n                        )),\n        },\n    avatars: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        },\n    }),\n    );\n    const classes = useStyles();\n    return (\n    <Card className={classes.root}>\n        <CardContent>\n        <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n            <Grid item xs={4}>\n                {\n                    (props.isRecom || !props.isOwner)\n                    ?(\n                        <Button\n                        size=\"small\"\n                        onClick={() => {props.handleProfile(props.information.user_id)}}\n                        >\n                        <Avatar alt={props.information.user} \n                        src={props.information.user_picture} className={classes.avatars}/>\n                        </Button>\n                    )\n                    :(\n                        <Avatar alt={props.information.user} \n                        src={props.information.user_picture} className={classes.avatars}/>\n                    )\n                }\n            </Grid>\n            <Grid item xs={5}>\n                <Typography gutterBottom variant=\"subtitle1\">\n                    {props.information.title}\n                </Typography>\n            </Grid>\n            <Grid item xs={3}>\n                {\n                    (props.information.tutor != null)\n                    ?(\n                    <Button\n                    size=\"small\"\n                    onClick={() => {props.handleProfile(props.information.tutor_id)}}\n                    >\n                        <Avatar alt={props.information.tutor}\n                        src={props.information.tutor_picture}\n                        className={classes.avatars}/>\n                    </Button>)\n                    :(\n                        < div/>\n                    )\n                }\n            </Grid>\n            <Grid item xs={9}>\n                <Typography variant=\"body1\">\n                    {props.information.user}\n                </Typography>\n            </Grid>\n            <Grid item xs={3}>\n                <Typography variant=\"body1\">\n                    {props.information.tutor}\n                </Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                    {props.information.detail}\n                </Typography>\n            </Grid>\n            <Grid item xs={10}>\n                {chips}\n            </Grid>\n            {\n                (props.isRecom)\n                ?(\n                    <div></div>\n                )\n                :(\n                    <Grid item xs={2}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                            {props.information.time}\n                    </Typography>\n                    </Grid>\n                )\n            }\n            \n            {\n                (props.isRecom)\n                ?(\n                    <div/>\n                )\n                :(\n                    <Grid item xs={10}>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                        {props.information.status}\n                    </Typography>\n                </Grid>\n                )\n            }\n            <Grid item xs={2}>\n            {\n                (button != null)\n                ?(\n                    (button == 'help')\n                    ?(\n                        <Button \n                        variant=\"outlined\" \n                        size=\"small\"\n                        onClick={() => {props.handleHelp(\n                            props.information.question_id,\n                            props.information.created_at,\n                            props.information.user_id,\n                            props.information.user,\n                            props.information.title,\n                            props.information.detail,\n                            props.information.attachment,\n                            props.information.tags\n                            )}}\n                        >\n                        {button}\n                        </Button>\n                    )\n                    :(\n                        <Button \n                        size=\"small\"\n                        color=\"secondary\"\n                        onClick={\n                            () => {\n                                props.handleCancel(\n                                    props.information.question_id,\n                                    String(props.information.created_at)\n                                )\n                            }\n                        }\n                        >\n                        {button}\n                        </Button>\n                    )\n                )\n                :(\n                    <div/>\n                )\n            }\n            </Grid>\n            <Grid item xs={10}>\n            {\n                (props.information.attachment)\n                ?(\n                <Grid item xs={12}>\n                <Typography variant='body2' color='textSecondary'>\n                    <a href={props.information.attachment}>attachment</a>\n                </Typography>\n                </Grid>\n                )\n                :(\n                    <div/>\n                )\n            }\n            </Grid>\n            <Grid item xs={2}>\n                {\n                    (confirmTag)\n                    ?(\n                        <Button \n                        size=\"small\"\n                        color=\"primary\"\n                        onClick={\n                            () => {\n                                fetch(\n                                    URL, {\n                                        method:'POST',\n                                        headers: {\n                                            \"Access-Control-Allow-Headers\": \"*\",\n                                            'token': props.token.id_token,\n                                            \"access_token\": props.token.access_token,\n                                            \"Access-Control-Allow-Origin\": \"*\",\n                                            \"Access-Control-Allow-Methods\": \"*\",\n                                            'Access-Control-Allow-Credentials' : 'true',\n                                            \"question_keys\": props.information.question_id + ' ' + String(props.information.created_at)\n                                        },\n                                        body:''\n                                    })\n                                    .then(\n                                        response => response.json()\n                                    )\n                                    .then(\n                                        data => {\n                                            alert(data);\n                                            props.reload()\n                                            // window.location.reload();\n                                        }\n                                    ).catch(\n                                        err => {\n                                            alert(err);\n                                            props.reload()\n                                            // window.location.reload();\n                                        }\n                                    )\n                            }\n                        }\n                        >\n                        confirm\n                        </Button>\n                    )\n                    :(\n                        <div/>\n                    )\n                }\n            </Grid>\n            \n        </Grid>\n        </CardContent>\n    </Card>\n    );\n}","import React, { useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport Slide from '@material-ui/core/Slide';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport QuestionForm from './QuestionForm'\n\n\nimport ProfilePop from './ProfilePop'\nimport QuestionCard from './QuestionCard'\nvar URL = 'https://gr73qrcwnl.execute-api.us-east-1.amazonaws.com/v1/recommender/question'\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement },\n    ref: React.Ref<unknown>,\n) {\nreturn <Slide direction=\"left\" ref={ref} {...props} />;\n});\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        dialogCustomizedWidth: {\n            'max-width': '100%',\n            backgroundColor: 'transparent',\n            boxShadow: 'none',\n            },\n        fabStyle:{\n            bottom: theme.spacing(2),\n            marginLeft: '70%',\n            position: 'sticky',\n            color:'secondary'\n        }\n    }))\n\n\nexport default function StudentHome(props:any) {\n    const [data, setData] = useState<any[]>([])\n    const [lastKeyUser, setLastUser] = useState('null');\n    const [lastKeyTutor, setLastTutor] = useState('null');\n    const [hasMoreItems, setMore] = useState(true);\n\n    const [OpenProfile, setOpenProfile] = React.useState(false);\n    const [selectedPersonId, setPersonId] = React.useState('null');\n    const [ask, setAsk] = React.useState(false);\n\n    const [name, setName] = React.useState('null');\n    const [title, setTitle] = React.useState('null');\n    const [detail, setDetail] = React.useState('null');\n    const [attachment, setAttachment] = React.useState('null');\n    const [question_id, setQuestion] = React.useState('null');\n    const [created_at, setCreatedAt] = React.useState('null');\n\n    const [dataKey, setdataKey] = useState<string[]>([]);\n\n    const [tags, setTags] = useState<string[]>([])\n\n    function loadItems() {\n        var lastKey = 'null'\n        if (lastKeyUser !== 'null'){\n            lastKey = JSON.stringify({\n                user_id: lastKeyUser,\n                tutor_id: lastKeyTutor\n                })\n        }\n        var headers = {\n            'token': props.token.id_token,\n            'access_token': props.token.access_token,\n            'last_key': lastKey,\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET\",\n            \"Access-Control-Allow-Headers\": \"*\",\n            'Content-Type':  'application/json',\n            'Access-Control-Allow-Credentials' : 'true',\n        }\n        fetch(URL, {\n            method: 'GET',\n            headers:headers\n        })\n        .then(res => res.json())\n        .then(datum => { \n            if (datum.data){\n                if (hasMoreItems && datum.data.length > 0){\n                    if (!dataKey.includes(datum.data[0].user_id)) {\n                        const newKey = data.concat(datum.data[0].user_id);\n                        setdataKey(newKey)\n                        const newData = data.concat(datum.data);\n                        setData(newData)\n                    }\n                }\n                if (datum.LastEvaluatedKey){\n                    setLastUser(datum.LastEvaluatedKey.user_id);\n                    setLastTutor(datum.LastEvaluatedKey.tutor_id)\n                } else{\n                    setMore(false);\n                }\n            }\n            }\n        )\n    }\n    function handleOpenProfile(user_id: string) {\n        setOpenProfile(true);\n        setPersonId(user_id);\n    }\n    function handleProfileClose() {\n        setOpenProfile(false);\n        setPersonId('null');\n    }\n    function handleOpenHelp(\n        question_id: string,\n        created_at: string,\n        user_id: string,\n        name: string,\n        title: string,\n        detail: string,\n        attachment: string,\n        tags: string[]\n    ) {\n        setAsk(true);\n        setQuestion(question_id);\n        setCreatedAt(created_at);\n        setPersonId(user_id);\n        setName(name);\n        setTitle(title);\n        setDetail(detail);\n        setAttachment(attachment);\n        setTags(tags)\n    }\n    function handleHelpClose() {\n        setAsk(false);\n        setPersonId('null');\n        setName('null');\n        setTitle('null');\n        setDetail('null');\n        setAttachment('null');\n        setTags([])\n    }\n    function reloadPage(){\n        setData([]);\n        setMore(true);\n        setLastUser('null');\n        setLastTutor('null');\n    }\n    const loader = <LinearProgress color=\"secondary\" />\n    var items: Array<any> = []\n    data.forEach(element => {\n        items.push(\n            <ListItem key={element.question_id}>\n            <QuestionCard information={element} \n                            isOwner={false} \n                            isDark={true} \n                            isRecom={true} \n                            handleProfile={handleOpenProfile}\n                            handleHelp={handleOpenHelp}\n                            />\n            </ListItem>\n        )\n    })\n    const classes = useStyles()\n    return(\n        <div>\n        <Container maxWidth=\"lg\">\n            <List>\n            {\n                <InfiniteScroll\n                pageStart={0}\n                loadMore={loadItems}\n                hasMore={hasMoreItems}\n                loader={loader}>\n                {items}\n                </InfiniteScroll>\n            }\n            </List>\n        </Container>\n        <ProfilePop\n        openStatus={OpenProfile}\n        closeFunction={handleProfileClose}\n        isDark={true}\n        user_id={selectedPersonId}\n        editable={false}\n        token={props.token}\n        />\n        <Dialog\n        fullWidth\n        classes={{ paperFullWidth: classes.dialogCustomizedWidth }}\n        open={ask}\n        onClose={handleHelpClose}\n        TransitionComponent={Transition}\n        >\n        <QuestionForm\n        token={props.token}\n        isDark={true} \n        ask={false} \n        email={selectedPersonId} \n        name={name}\n        title={title}\n        detail={detail}\n        attachment={attachment}\n        tags={tags}\n        question_id = {question_id}\n        created_at = {created_at}\n        close = {handleHelpClose}\n        reload = {reloadPage}\n        />\n        </Dialog>\n\n        </div>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Header from './Header'\nimport StudentHome from './StudentHome'\nimport TutorHome from './TutorHome'\nfunction PublicHome(props: any) {\n    const useStyles = makeStyles({\n        root: {\n            minWidth: 275,\n            background: 'linear-gradient(to bottom, #9492ef, #dc95ee)',\n            borderRadius: 0,\n            boxShadow: \"none\"\n        },\n        bullet: {\n            display: 'inline-block',\n            margin: '0 2px',\n            transform: 'scale(0.8)',\n        },\n        title: {\n            fontSize: 64,\n            fontFamily: 'Amatic SC',\n            color: '#ffffff',\n            textAlign: 'center',\n            marginTop: '7%'\n        },\n        pos: {\n            marginBottom: 12,\n        },\n        footer: {\n            marginTop: '25%'\n        }\n    });\n    \n    const classes = useStyles();\n    return (\n    <Card className={classes.root}>\n        <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            <Box fontWeight=\"fontWeightBold\">\n                Your Place to Ask/Answer\n            </Box>\n        </Typography>\n        </CardContent>\n        <CardActions className={classes.footer}>\n        {/* <Button size=\"large\">Learn More</Button> */}\n        </CardActions>\n    </Card>\n    );\n}\n\n\nfunction ClientHome(props: any) {\n    return(\n        <div>\n            <Header text={\n                (props.isDark)\n                ?('Discover Questions')\n                :('Find Tutors')\n                }\n                isDark={\n                    props.isDark\n                }\n                token={\n                    props.token\n                }\n            />\n        {\n            (props.isDark)\n            ?(\n                <TutorHome token={props.token}/>\n            )\n            :(\n                <StudentHome token={props.token}/>\n            )\n        }\n        </div>\n    )\n}\n\n\n\n\nexport default function Home(props: any) {\n    const isLogin = (props.token != 'null')\n    return(\n        <div className=\"home\">\n        {\n            isLogin?\n            (\n                <ClientHome isDark={props.isDark} token={props.token}/>\n            )\n            :(\n                <PublicHome/>\n            )\n        }\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport Register from './Register'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst URL = 'https://ccfinalsy2938.auth.us-east-1.amazoncognito.com/oauth2/userInfo';\n\nconst LOGIN = 'https://gr73qrcwnl.execute-api.us-east-1.amazonaws.com/v1/login'\n\nfunction getUrlVars() {\n    let Token = {\n        id_token: '',\n        access_token: ''\n    }\n\tvar parts = window.location.href.match(/[?#&]+([^=&]+)=([^&]*)/gi)\n    if (parts) {\n        Token.id_token = parts[0].split('=')[1];\n        Token.access_token =  parts[1].split('=')[1];\n    }\n    return Token\n}\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (props:any) {\n\n    const [registered, setRegister] = useState(true);\n    const [loading, setLoading] = useState(true);\n    const [preLoginToken, setToken] = useState({\n                                            user_id:'', \n                                            picture:'',\n                                            given_name:'',\n                                            family_name:''\n                                            });\n    \n    function preLogin(token:string, access_token:string) {\n        setLoading(true);\n        Promise.all([fetch(LOGIN,\n            {\n                method:'GET',\n                headers: {\n                    \"Access-Control-Allow-Headers\": \"*\",\n                    \"token\": token,\n                    \"access_token\": access_token,\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"GET\",\n                    'Content-Type':  'application/json',\n                    'Access-Control-Allow-Credentials' : 'true',\n                }\n            } \n        ).then(res=>res.json()),\n        fetch(URL, {method:'get', headers : {\n            \"Authorization\": 'Bearer ' + access_token,\n        }}).then(res=>res.json())\n        ])\n        .then(\n            res => {\n                const datum = res[1];\n                if (datum.email) {\n                    setRegister(res[0]);\n                    datum.user_id = datum.email;\n                    datum.id_token = id_token;\n                    datum.access_token = access_token;\n                    if (registered) {\n                        props.login(datum);\n                        window.location.href = './';\n                    } else {\n                        setToken(datum);\n                    }\n                    setLoading(false);\n                } else{\n                    alert('error while login');\n                    window.location.href = './';\n                }\n            }\n        ).catch(\n            err => {\n                alert(err);\n                window.location.href = './';\n            }\n        )\n    }\n    \n    function handleClose(){\n        setRegister(!registered);\n        props.login(preLoginToken);\n    }\n\n    var token = getUrlVars()\n    var access_token = token.access_token;\n    var id_token = token.id_token\n\n    useEffect(\n        () => {\n            preLogin(id_token, access_token)\n        }\n    ,[registered])\n    return (\n        <div>\n        {\n            (loading)\n            ?(\n                <CircularProgress color=\"secondary\" />\n            )\n            :(\n                <Register \n                openStatus = {!registered}\n                closeFunction={handleClose}\n                isDark={false}\n                profile={{\n                    availability: [], \n                    tags:[],\n                    first_name: preLoginToken.given_name,\n                    last_name: preLoginToken.family_name,\n                    user_id: preLoginToken.user_id,\n                    tutor: false,\n                    school: '',\n                    degree: '',\n                    picture: preLoginToken.picture,\n                    major: '',\n                    introduction: '',\n                    gender: 'F'\n                    }}\n                isRegister={true}\n                token={preLoginToken}\n                close={handleClose}\n                reload={()=>{window.location.href='./'}}\n            />\n            )\n        }\n        </div>\n    )\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nvar QUESTION = 'https://gr73qrcwnl.execute-api.us-east-1.amazonaws.com/v1/question/'\n\nexport default function cancelPop(props){\n\n    function deleteQuestion(){\n        var headers = {\n            \"Access-Control-Allow-Headers\": \"*\",\n            'token': props.token.id_token,\n            \"access_token\": props.token.access_token,\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"*\",\n            'Access-Control-Allow-Credentials' : 'true',\n            \"question_keys\": props.question_keys\n        }\n        fetch(\n            QUESTION, {\n                method:'DELETE',\n                headers: headers\n            }\n        ).then(\n            response => response.json()\n        ).then(\n            data => {\n                props.reload()\n                alert(data);\n            }\n        ).catch(\n            err => {\n                console.log(err);\n                alert(err);\n                props.reload()\n            }\n        )\n    }\n\n    return (\n        <Dialog\n        open={props.openStatus}\n        onClose={props.handleClose}\n        >\n        <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to cancel the question?\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={()=>deleteQuestion()} color=\"secondary\">\n                Yes\n            </Button>\n            <Button onClick={props.handleClose} color=\"primary\" autoFocus>\n                No\n            </Button>\n        </DialogActions>\n        </Dialog>\n    )\n}","import React, { useState } from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport Container from '@material-ui/core/Container';\n\nimport QuestionCard from './QuestionCard'\nimport ProfilePop from './ProfilePop'\nimport CancelPop from './CancelPop'\n\nvar URL = 'https://gr73qrcwnl.execute-api.us-east-1.amazonaws.com/v1/user/history'\n\nexport default function StudentHistory(props: any) {\n\n    const [lastKey, setLast] = useState('null');\n    const [data, setData] = useState<any[]>([])\n\n    const [hasMoreItems, setMore] = useState(true)\n    const [openUser, setOpenUser] = React.useState(false);\n    const [selectedUser, setUser] = React.useState('null');\n\n    const [openQuestion, setOpenQuestion] = React.useState(false);\n    const [selectedQuestion, setQuestion] = React.useState('null');\n\n    const [dataKey, setdataKey] = useState<string[]>([]);\n\n    function loadItems() {\n        fetch(URL, {\n            method:'GET', \n            headers: {\n                \"Access-Control-Allow-Headers\": \"*\",\n                'token': props.token.id_token,\n                'access_token': props.token.access_token,\n                'is_ask': 'true',\n                'last_key': lastKey,\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"GET\",\n                'Content-Type':  'application/json',\n                'Access-Control-Allow-Credentials' : 'true',\n            }\n        })\n        .then(res => res.json())\n        .then(datum => \n            { \n            if (datum.data){\n                if (hasMoreItems && datum.data.length > 0){\n                    if (!dataKey.includes(datum.data[0].user_id)) {\n                        const newKey = data.concat(datum.data[0].user_id);\n                        setdataKey(newKey)\n                        const newData = data.concat(datum.data);\n                        setData(newData)\n                    }\n                }\n                if (datum.LastEvaluatedKey){\n                    setLast(JSON.stringify(datum.LastEvaluatedKey))\n                } else{\n                    setMore(false);\n                }\n            }\n            }\n        )\n    }\n    function resetItems(){\n        setData([]);\n        setdataKey([]);\n        setLast('null');\n        setLast('null');\n        setMore(true);\n        setOpenQuestion(false);\n    }\n\n    function handleUserOpen(user_id: string) {\n        setOpenUser(true);\n        setUser(user_id);\n    }\n    function handleUserClose(user_id: string) {\n        setOpenUser(false);\n        setUser('null');\n    }\n    function handleQuestionOpen(question_id: string, created_at: string) {\n        setOpenQuestion(true);\n        setQuestion(question_id + ' ' + created_at);\n    }\n    function handleQuestionClose(question_id: string) {\n        setOpenQuestion(false);\n        setQuestion('null');\n    }\n\n    \n    const loader = <LinearProgress color=\"secondary\" />\n\n    var items = data.map(\n        element => (\n            <ListItem key={element.question_id}>\n            <QuestionCard \n            information={element}\n            isOwner={element.user_id === props.token.email} \n            isDark={false} \n            isRecom={false}\n            handleProfile={handleUserOpen}\n            handleCancel={handleQuestionOpen}\n            token={props.token}\n            reload={resetItems}\n            />\n            </ListItem>\n        )\n    )\n\n    return(\n        <div>\n        <Container maxWidth='lg' style={{textAlign: 'center'}}>\n            <List>\n            {\n                <InfiniteScroll\n                pageStart={0}\n                loadMore={loadItems}\n                hasMore={hasMoreItems}\n                loader={loader}>\n                {items}\n                </InfiniteScroll>\n            }\n            </List>\n        </Container>\n        <ProfilePop\n            openStatus={openUser}\n            closeFunction={handleUserClose}\n            isDark={false}\n            user_id={selectedUser}\n            editable={false}\n            token={props.token}\n        />\n        <CancelPop \n        token={props.token}\n        question_keys={selectedQuestion}\n        openStatus={openQuestion}\n        handleClose={handleQuestionClose}\n        reload={resetItems}\n        />\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport Container from '@material-ui/core/Container';\nimport QuestionCard from './QuestionCard'\nimport ProfilePop from './ProfilePop'\nimport CancelPop from './CancelPop'\n\nvar URL = 'https://gr73qrcwnl.execute-api.us-east-1.amazonaws.com/v1/user/history'\n\nexport default function TutorHistory(props: any) {\n\n    const [lastKey, setLast] = useState('null');\n    const [data, setData] = useState<any[]>([])\n\n    const [hasMoreItems, setMore] = useState(true)\n    const [openUser, setOpenUser] = React.useState(false);\n    const [selectedUser, setUser] = React.useState('null');\n\n    const [openQuestion, setOpenQuestion] = React.useState(false);\n    const [selectedQuestion, setQuestion] = React.useState('null');\n\n    const [dataKey, setdataKey] = useState<string[]>([]);\n\n    function loadItems() {\n        fetch(URL, {\n            method:'GET', \n            headers: {\n                \"Access-Control-Allow-Headers\": \"*\",\n                'token': props.token.id_token,\n                'access_token': props.token.access_token,\n                'is_ask': 'false',\n                'last_key': lastKey,\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"GET\",\n                'Content-Type':  'application/json',\n                'Access-Control-Allow-Credentials' : 'true',\n            }\n        })\n        .then(res => res.json())\n        .then(datum => \n            {   \n            if (datum.data) {\n                if (hasMoreItems && datum.data.length > 0){\n                    if (!dataKey.includes(datum.data[0].user_id)) {\n                        const newKey = data.concat(datum.data[0].user_id);\n                        setdataKey(newKey)\n                        const newData = data.concat(datum.data);\n                        setData(newData)\n                    }\n                }   if (datum.LastEvaluatedKey){\n                    setLast(JSON.stringify(datum.LastEvaluatedKey))\n                } else{\n                    setMore(false);\n                }\n            }\n            }\n            )\n    }\n    function resetItems(){\n        setData([]);\n        setdataKey([]);\n        setLast('null');\n        setLast('null');\n        setMore(true);\n        setOpenQuestion(false);\n    }\n    function handleUserOpen(user_id: string) {\n        setOpenUser(true);\n        setUser(user_id);\n    }\n    function handleUserClose(user_id: string) {\n        setOpenUser(false);\n        setUser('null');\n    }\n    function handleQuestionOpen(question_id: string, created_at: string) {\n        setOpenQuestion(true);\n        setQuestion(question_id + ' ' + created_at);\n    }\n    function handleQuestionClose(question_id: string) {\n        setOpenQuestion(false);\n        setQuestion('null');\n    }\n    \n    const loader = <LinearProgress color=\"secondary\" />\n    var items = data.map(\n        element => (\n            <ListItem key={element.question_id}>\n            <QuestionCard information={element} \n            isOwner={element.user_id === props.token.email} \n            isDark={true} \n            isRecom={false}\n            handleProfile={handleUserOpen}\n            handleCancel={handleQuestionOpen}\n            token={props.token}\n            reload={resetItems}\n            />\n            </ListItem>\n        )\n    )\n    return(\n        <div>\n        <Container maxWidth='lg' style={{textAlign: 'center'}}>\n            <List>\n            {\n                <InfiniteScroll\n                pageStart={0}\n                loadMore={loadItems}\n                hasMore={hasMoreItems}\n                loader={loader}>\n                {items}\n                </InfiniteScroll>\n            }\n            </List>\n        </Container>\n        <ProfilePop\n            openStatus={openUser}\n            closeFunction={handleUserClose}\n            isDark={true}\n            user_id={selectedUser}\n            editable={false}\n            token={props.token}\n        />\n        <CancelPop \n        token={props.token}\n        question_keys={selectedQuestion}\n        openStatus={openQuestion}\n        handleClose={handleQuestionClose}\n        reload={resetItems}\n        />\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport Header from './Header'\nimport StudentHistory from './StudentHistory'\nimport TutorHistory from './TutorHistory'\nexport default function History(props: any) {\n\n    return(\n        <div>\n        <Header text={\n            'History'\n            }\n            isDark={\n                props.isDark\n            }\n        />\n        {\n            (props.isDark)\n            ?(\n                <TutorHistory token={props.token}/>\n            )\n            :(\n                <StudentHistory token={props.token}/>\n            )\n        }\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport Header from './Header'\nimport ProfileConent from './ProfileContent'\nfunction Profile(props){\n    return(\n        <div>\n            <Header text={\n            ''\n            }\n            isDark={\n                props.isDark\n            }\n            />\n            <div style={{marginTop:'2%'}}/>\n            <ProfileConent token={props.token} \n                        isDark={props.isDark} \n                        email={props.token.email}\n                        editable={true}\n                        />\n        </div>\n    )\n}\n\nexport default Profile","import React, { useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport Slide from '@material-ui/core/Slide';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport { useEffect } from 'react';\nimport QuestionForm from './QuestionForm'\n\n\nimport ProfilePop from './ProfilePop'\nimport QuestionCard from './QuestionCard'\nvar URL = 'https://gr73qrcwnl.execute-api.us-east-1.amazonaws.com/v1/search/question'\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement },\n    ref: React.Ref<unknown>,\n) {\nreturn <Slide direction=\"left\" ref={ref} {...props} />;\n});\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        dialogCustomizedWidth: {\n            'max-width': '100%',\n            backgroundColor: 'transparent',\n            boxShadow: 'none',\n            },\n        fabStyle:{\n            bottom: theme.spacing(2),\n            marginLeft: '70%',\n            position: 'sticky',\n            color:'secondary'\n        }\n    }))\n\n\nexport default function SearchQuestion(props:any) {\n    const [data, setData] = useState<any[]>([])\n    const [hasMoreItems, setMore] = useState(true);\n\n    const [OpenProfile, setOpenProfile] = React.useState(false);\n    const [selectedPersonId, setPersonId] = React.useState('null');\n    const [ask, setAsk] = React.useState(false);\n\n    const [name, setName] = React.useState('null');\n    const [title, setTitle] = React.useState('null');\n    const [detail, setDetail] = React.useState('null');\n    const [attachment, setAttachment] = React.useState('null');\n    const [question_id, setQuestion] = React.useState('null');\n    const [created_at, setCreatedAt] = React.useState('null');\n\n    const [dataKey, setdataKey] = useState<string[]>([]);\n\n    const [tags, setTags] = useState<string[]>([])\n\n    function loadItems() {\n        var headers = {\n            \"Access-Control-Allow-Headers\": \"*\",\n            'token': props.token.id_token,\n            'access_token': props.token.access_token,\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET\",\n            'Content-Type':  'application/json',\n            'Access-Control-Allow-Credentials' : 'true',\n            \"keywords\": props.keywords\n        }\n        fetch(URL, {\n            method: 'GET',\n            headers: headers\n        })\n        .then(res => res.json())\n        .then(datum => {\n            if (datum.data) {\n                if (hasMoreItems && datum.data.length > 0){\n                    if (!dataKey.includes(datum.data[0].user_id)) {\n                        const newKey = data.concat(datum.data[0].user_id);\n                        setdataKey(newKey)\n                        const newData = data.concat(datum.data);\n                        setData(newData)\n                    }\n                }\n            }\n        })\n        .then(\n            () => {\n                setMore(false);\n            }\n        )\n    }\n    function handleOpenProfile(user_id: string) {\n        setOpenProfile(true);\n        setPersonId(user_id);\n    }\n    function handleProfileClose() {\n        setOpenProfile(false);\n        setPersonId('null');\n    }\n    function handleOpenHelp(\n        question_id: string,\n        created_at: string,\n        user_id: string,\n        name: string,\n        title: string,\n        detail: string,\n        attachment: string,\n        tags: string[]\n    ) {\n        setAsk(true);\n        setQuestion(question_id);\n        setCreatedAt(created_at);\n        setPersonId(user_id);\n        setName(name);\n        setTitle(title);\n        setDetail(detail);\n        setAttachment(attachment);\n        setTags(tags)\n    }\n    function handleHelpClose() {\n        setAsk(false);\n        setPersonId('null');\n        setName('null');\n        setTitle('null');\n        setDetail('null');\n        setAttachment('null');\n        setTags([])\n    }\n    function reloadPage(){\n        setData([]);\n        setMore(true);\n    }\n    useEffect(\n        () => {\n            setData([]);\n            setdataKey([]);\n            setMore(true);\n        },[props.keywords]\n    )\n    loadItems();\n    var items: Array<any> = []\n    data.forEach(element => {\n        items.push(\n            <ListItem key={element.question_id}>\n            <QuestionCard information={element} \n                            isOwner={false} \n                            isDark={true} \n                            isRecom={true} \n                            handleProfile={handleOpenProfile}\n                            handleHelp={handleOpenHelp}\n                            />\n            </ListItem>\n        )\n    })\n    const classes = useStyles()\n    return(\n        <div>\n        <Container maxWidth=\"lg\">\n            <List>\n            {items}\n            </List>\n            {\n            (hasMoreItems)\n            ?(\n                <LinearProgress color=\"secondary\" />\n            )\n            :(\n                <div/>\n            )\n            }\n        </Container>\n        <ProfilePop\n        openStatus={OpenProfile}\n        closeFunction={handleProfileClose}\n        isDark={true}\n        user_id={selectedPersonId}\n        editable={false}\n        token={props.token}\n        />\n        <Dialog\n        fullWidth\n        classes={{ paperFullWidth: classes.dialogCustomizedWidth }}\n        open={ask}\n        onClose={handleHelpClose}\n        TransitionComponent={Transition}\n        >\n        <QuestionForm\n        token={props.token}\n        isDark={true} \n        ask={false} \n        email={selectedPersonId} \n        name={name}\n        title={title}\n        detail={detail}\n        attachment={attachment}\n        tags={tags}\n        question_id = {question_id}\n        created_at = {created_at}\n        close = {handleHelpClose}\n        reload = {reloadPage}\n        />\n        </Dialog>\n\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Container from '@material-ui/core/Container';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport IconButton from '@material-ui/core/IconButton';\nimport ProfileCard from './ProfileCard'\nimport QuestionForm from './QuestionForm'\nimport ProfilePop from './ProfilePop'\nimport { useEffect } from 'react';\n\nvar URL = 'https://gr73qrcwnl.execute-api.us-east-1.amazonaws.com/v1/search/user'\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement },\n    ref: React.Ref<unknown>,\n) {\nreturn <Slide direction=\"left\" ref={ref} {...props} />;\n});\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        dialogCustomizedWidth: {\n            'max-width': '100%',\n            backgroundColor: 'transparent',\n            boxShadow: 'none',\n            },\n        fabStyle:{\n            bottom: theme.spacing(2),\n            marginLeft: '70%',\n            position: 'sticky',\n            color:'secondary'\n        }\n    }))\nexport default function SearchTutor(props:any) {\n    const [data, setData] = useState<any[]>([])\n    const [hasMoreItems, setMore] = useState(true)\n    const [OpenProfile, setOpenProfile] = React.useState(false);\n    const [OpenAsk, setOpenAsk] = React.useState(false);\n    const [selectedPersonId, setPersonId] = React.useState('null');\n    const [selectedPersonName, setPersonName] = React.useState('null');\n    const [dataKey, setdataKey] = useState<string[]>([]);\n    function loadItems() {\n        var headers = {\n            \"Access-Control-Allow-Headers\": \"*\",\n            'token': props.token.id_token,\n            'access_token': props.token.access_token,\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET\",\n            'Content-Type':  'application/json',\n            'Access-Control-Allow-Credentials' : 'true',\n            \"keywords\": props.keywords\n        }\n        fetch(URL, {\n            method: 'GET',\n            headers: headers\n        })\n        .then(res => res.json())\n        .then(datum => {\n            if (datum.data) {\n                if (hasMoreItems && datum.data.length > 0){\n                    if (!dataKey.includes(datum.data[0].user_id)) {\n                        const newKey = data.concat(datum.data[0].user_id);\n                        setdataKey(newKey)\n                        const newData = data.concat(datum.data);\n                        setData(newData)\n                    }\n                }\n            }\n        })\n        .then(\n            () => {\n                setMore(false);\n            }\n        )\n    }\n    function handleOpenProfile(user_id: string) {\n        setOpenProfile(true);\n        setPersonId(user_id);\n    }\n    function handleAsk(user_id: string, name: string) {\n        setOpenAsk(true);\n        setPersonId(user_id);\n        setPersonName(name)\n    }\n    \n    function handleProfileClose() {\n        setOpenProfile(false);\n        setPersonId('null');\n    }\n    function handleAskClose(){\n        setOpenAsk(false);\n        setPersonId('null');\n        setPersonName('null');\n    }\n    useEffect(\n        () => {\n            setData([]);\n            setdataKey([]);\n            setMore(true);\n        },[props.keywords]\n    )\n    loadItems()\n    var items = data.map(\n        element => (\n            <ListItem key={element.user_id}>\n            <ProfileCard profile={element} handleAsk={handleAsk} handleProfile={handleOpenProfile}/>\n            </ListItem>\n        )\n    )\n    const classes = useStyles();\n    return(\n        <div>\n        <Container maxWidth=\"lg\">\n        <List>\n            {items}\n        </List>\n        {\n            (hasMoreItems)\n            ?(\n                <LinearProgress color=\"secondary\" />\n            )\n            :(\n                <div/>\n            )\n        }\n        <IconButton onClick={() => {handleAsk('null', 'null')}} className={classes.fabStyle}>\n            <EditIcon color=\"secondary\"/>\n        </IconButton >\n        </Container>\n        <ProfilePop\n        openStatus={OpenProfile}\n        closeFunction={handleProfileClose}\n        isDark={false}\n        user_id={selectedPersonId}\n        editable={false}\n        token={props.token}\n        />\n        <Dialog\n        fullWidth\n        classes={{ paperFullWidth: classes.dialogCustomizedWidth }}\n        open={OpenAsk}\n        onClose={handleAskClose}\n        TransitionComponent={Transition}\n        >\n        {\n            (selectedPersonId == 'null')\n            ?(\n                <QuestionForm \n                aws={props.aws}\n                token={props.token}\n                email={'Null'} \n                name={'Null'} \n                isDark={false} \n                ask={true}\n                close={handleAskClose}\n                tags={[]}/>\n            )\n            :(\n                <QuestionForm \n                token={props.token}\n                email={selectedPersonId} \n                name={selectedPersonName}\n                isDark={false} \n                ask={true}\n                close={handleAskClose}\n                tags={[]}/>\n            )\n        }\n        \n        </Dialog>\n        </div>\n    )\n}","import React from 'react';\nimport Header from './Header'\nimport SearchQuestion from './SearchQuestion'\nimport SearchTutor from './SearchTutor'\n\n\n\nexport default function Search(props: any) {\n    return(\n        <div>\n            <Header text={\n                (props.isDark)\n                ?('Search Questions')\n                :('Search Tutors')\n                }\n                isDark={\n                    props.isDark\n                }\n                token={\n                    props.token\n                }\n            />\n            {\n                (props.isDark)\n                ?(\n                    <SearchQuestion token={props.token} keywords={props.location.state.q}/>\n                )\n                :(\n                    <SearchTutor token={props.token} keywords={props.location.state.q}/>\n                )\n            }\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { Router, Route, Switch , Redirect} from 'react-router-dom';\nimport history from './historyUtils';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Menu from './Menu';\nimport Home from './Home';\nimport Login from './Login';\nimport History from './History'\nimport Profile from './Profile'\nimport Search from './Search'\n// const history = createBrowserHistory();\n\n\nfunction App() {\n  const userToken = sessionStorage.getItem('token');\n  const [token, setToken] = useState((userToken == null)?('null'):(JSON.parse(userToken)));\n  // const [token, setToken] = useState('null');\n  // var token = (userToken == null)?('null'):(JSON.parse(userToken));\n\n  const [isDark, setDark] = useState(false);\n  function switchMode() {\n    setDark(!isDark)\n  }\n  const theme = createMuiTheme({\n    palette: {\n    type: (isDark) ? 'dark' : 'light'\n  }})\n\n  function login(token:string){\n    if (token == 'null'){\n      sessionStorage.clear();\n      setToken(token);\n    }else{\n      sessionStorage.setItem('token', JSON.stringify(token));\n      setToken(token);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router history={history}>\n        <Menu token={token} isDark={isDark} switchRole={switchMode} logout={() => {\n                                                              login('null');\n                                                              }}/>\n        <Switch>\n          <Route exact path=\"/\"\n          render = {\n            (props) =>\n            <Home token={token} isDark={isDark} {...props}/>\n          }\n          />\n          <Route exact path=\"/login\"\n          render = {\n            (props) =>\n            <Login login={login} {...props}/>\n          }/>\n          {\n            (token != 'null')\n            ?(\n              <Route exact path=\"/history\" \n              render={\n                (props) =>\n                <History token={token} isDark={isDark} {...props}/>\n              }\n            />\n            )\n            :(\n              <Redirect to='/'/>\n            )\n          }\n          {\n            (token != 'null')\n            ?(\n              <Route exact path='/profile' \n            render={\n              (props) =>\n              <Profile token={token} isDark={isDark} {...props}/>\n            }\n            />\n            )\n            :(\n              <Redirect to='/'/>\n            )\n          }\n          {\n            (token != 'null')\n            ?(\n              <Route exact path='/search' \n            render={\n              (props) =>\n              <Search token={token} isDark={isDark} {...props}/>\n            }\n            />\n            )\n            :(\n              <Redirect to='/'/>\n            )\n          }\n        </Switch>\n      </Router>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './utils/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}